// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using Huanlin.Helpers;

namespace Test.Huanlin
{
    /// <summary>
    ///This is a test class for Huanlin.Helpers.IPAddressPattern and is intended
    ///to contain all Huanlin.Helpers.IPAddressPattern Unit Tests
    ///</summary>
    [TestClass()]
    public class IPAddressPatternTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for Equals (object)
        ///</summary>
        [TestMethod()]
        public void EqualsTest()
        {
            IPAddressPattern target = new IPAddressPattern("92.168.10.0");

            object obj = new IPAddressPattern("092.168.10.000");

            bool expected = true;
            bool actual = target.Equals(obj);

            Assert.AreEqual(expected, actual, "Huanlin.Helpers.IPAddressPattern.Equals 測試失敗!");
        }

        /// <summary>
        ///A test for IPAddressPattern ()
        ///</summary>
        [TestMethod()]
        public void ConstructorTest()
        {
            string[] parts = new string[] { "192", "168", "01", "*" };

            IPAddressPattern target = new IPAddressPattern(parts);

            Assert.AreEqual("192.168.1.*", target.ToString(), false, "建構函式測試失敗!");
        }

        /// <summary>
        ///A test for IsMatch (string)
        ///</summary>
        [TestMethod()]
        public void IsMatchTest()
        {
            IPAddressPattern target = new IPAddressPattern("192.168.1.*");

            string ip = "192.168.1.2";

            bool expected = true;
            bool actual;

            actual = target.IsMatch(ip);

            Assert.AreEqual(expected, actual, "HltLib.Net.IPAddressPattern.IsMatch did not return the expected value.");

            target = new IPAddressPattern("192.*.1.2");
            actual = target.IsMatch(ip);

            Assert.AreEqual(expected, actual, "HltLib.Net.IPAddressPattern.IsMatch did not return the expected value.");

            target = new IPAddressPattern("192.168.1.20");
            expected = false;
            actual = target.IsMatch(ip);

            Assert.AreEqual(expected, actual, "IPAddressPattern.IsMatch did not return the expected value.");
        }

        /// <summary>
        ///A test for IsValidIPAddress (string)
        ///</summary>
        [TestMethod()]
        public void IsValidIPAddressTest()
        {
            string ip = "192.168.0.1";

            bool expected = true;
            bool actual;

            actual = IPAddressPattern.IsValidIPAddress(ip);

            Assert.AreEqual(expected, actual, "HltLib.Net.IPAddressPattern.IsValidIPAddress did not return the expected value.");
        }

        /// <summary>
        ///A test for IsValidPart (string)
        ///</summary>
        [TestMethod()]
        public void IsValidPartTest()
        {
            IPAddressPattern target = new IPAddressPattern();

            string s = "256";

            bool expected = false;
            bool actual = target.IsValidPart(s);

            Assert.AreEqual(expected, actual, "Huanlin.Helpers.IPAddressPattern.IsValidPart 測試失敗!");
        }

        /// <summary>
        ///A test for Parse (string)
        ///</summary>
        [TestMethod()]
        public void ParseTest()
        {
            string s = "192.168.01.*";

            IPAddressPattern actual;

            actual = IPAddressPattern.Parse(s);
            string expected = "192.168.1.*";

            Assert.AreEqual(expected, actual.ToString(), "IPAddressPattern.Parse 測試失敗!");
        }

        /// <summary>
        ///A test for this[int idx]
        ///</summary>
        [TestMethod()]
        public void ItemTest()
        {
            IPAddressPattern target = new IPAddressPattern();

            string val = "001";

            int idx = 0;

            target[idx] = val;


            Assert.AreEqual("1", target[idx], "IPAddressPattern.this was not set correctly.");
        }

        /// <summary>
        ///A test for ToString ()
        ///</summary>
        [TestMethod()]
        public void ToStringTest()
        {
            IPAddressPattern target = new IPAddressPattern("123.4.5.*");

            string expected = "123.4.5.*";
            string actual;

            actual = target.ToString();

            Assert.AreEqual(expected, actual, "Huanlin.Helpers.IPAddressPattern.ToString 測試失敗!");
        }

    }


}
